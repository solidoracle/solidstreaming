{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "greetingSetter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newGreeting",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "premium",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GreetingChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "premium",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newGreeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userGreetingCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052601c60a09081527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060c05260009061003c9082610127565b506001805460ff19169055600060025534801561005857600080fd5b5060405161096b38038061096b833981016040819052610077916101e6565b6001600160a01b0316608052610216565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100b257607f821691505b6020821081036100d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561012257600081815260208120601f850160051c810160208610156100ff5750805b601f850160051c820191505b8181101561011e5782815560010161010b565b5050505b505050565b81516001600160401b0381111561014057610140610088565b6101548161014e845461009e565b846100d8565b602080601f83116001811461018957600084156101715750858301515b600019600386901b1c1916600185901b17855561011e565b600085815260208120601f198616915b828110156101b857888601518255948401946001909101908401610199565b50858210156101d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156101f857600080fd5b81516001600160a01b038116811461020f57600080fd5b9392505050565b60805161072d61023e6000396000818160a9015281816101a30152610209015261072d6000f3fe6080604052600436106100745760003560e01c8063a41368621161004e578063a41368621461010c578063cea49c3c1461011f578063e0a73a931461014c578063ef690cc01461017657600080fd5b80633ccfd60b146100805780638da5cb5b1461009757806397feba9d146100e857600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b50610095610198565b005b3480156100a357600080fd5b506100cb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506100fe60025481565b6040519081526020016100df565b61009561011a366004610416565b6102c2565b34801561012b57600080fd5b506100fe61013a3660046104c7565b60036020526000908152604090205481565b34801561015857600080fd5b506001546101669060ff1681565b60405190151581526020016100df565b34801561018257600080fd5b5061018b610372565b6040516100df919061053d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102055760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329027bbb732b960991b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03164760405160006040518083038185875af1925050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50509050806102bf5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101fc565b50565b60006102ce82826105d9565b506001600260008282546102e29190610699565b9091555050336000908152600360205260408120805460019290610307908490610699565b90915550503415610323576001805460ff19168117905561032e565b6001805460ff191690555b7f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad338260003411600060405161036794939291906106c0565b60405180910390a150565b6000805461037f90610550565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90610550565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561042857600080fd5b813567ffffffffffffffff8082111561044057600080fd5b818401915084601f83011261045457600080fd5b81358181111561046657610466610400565b604051601f8201601f19908116603f0116810190838211818310171561048e5761048e610400565b816040528281528760208487010111156104a757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104d957600080fd5b81356001600160a01b03811681146104f057600080fd5b9392505050565b6000815180845260005b8181101561051d57602081850181015186830182015201610501565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104f060208301846104f7565b600181811c9082168061056457607f821691505b60208210810361058457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105d457600081815260208120601f850160051c810160208610156105b15750805b601f850160051c820191505b818110156105d0578281556001016105bd565b5050505b505050565b815167ffffffffffffffff8111156105f3576105f3610400565b610607816106018454610550565b8461058a565b602080601f83116001811461063c57600084156106245750858301515b600019600386901b1c1916600185901b1785556105d0565b600085815260208120601f198616915b8281101561066b5788860151825594840194600190910190840161064c565b50858210156106895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156106ba57634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03851681526080602082018190526000906106e4908301866104f7565b931515604083015250606001529291505056fea264697066735822122079c4c48e85328541253531ad94ade7ce6e6940de4b62c25051c8d676fc96296a64736f6c63430008120033",
    "sourceMap": "487:55:2:-:0;399:2282;487:55;;399:2282;487:55;;;;;;-1:-1:-1;;487:55:2;;-1:-1:-1;487:55:2;:::i;:::-;-1:-1:-1;548:27:2;;;-1:-1:-1;;548:27:2;;;570:5;581:31;;1003:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1041:14:2;;;399:2282;;14:127:27;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:27;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:27;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:27;;;2580:26;2531:89;-1:-1:-1;;1335:1:27;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:27;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:27;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:27;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:27:o;2735:290::-;2805:6;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;2900:16;;-1:-1:-1;;;;;2945:31:27;;2935:42;;2925:70;;2991:1;2988;2981:12;2925:70;3014:5;2735:290;-1:-1:-1;;;2735:290:27:o;:::-;399:2282:2;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100745760003560e01c8063a41368621161004e578063a41368621461010c578063cea49c3c1461011f578063e0a73a931461014c578063ef690cc01461017657600080fd5b80633ccfd60b146100805780638da5cb5b1461009757806397feba9d146100e857600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b50610095610198565b005b3480156100a357600080fd5b506100cb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506100fe60025481565b6040519081526020016100df565b61009561011a366004610416565b6102c2565b34801561012b57600080fd5b506100fe61013a3660046104c7565b60036020526000908152604090205481565b34801561015857600080fd5b506001546101669060ff1681565b60405190151581526020016100df565b34801561018257600080fd5b5061018b610372565b6040516100df919061053d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102055760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329027bbb732b960991b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03164760405160006040518083038185875af1925050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50509050806102bf5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101fc565b50565b60006102ce82826105d9565b506001600260008282546102e29190610699565b9091555050336000908152600360205260408120805460019290610307908490610699565b90915550503415610323576001805460ff19168117905561032e565b6001805460ff191690555b7f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad338260003411600060405161036794939291906106c0565b60405180910390a150565b6000805461037f90610550565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90610550565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561042857600080fd5b813567ffffffffffffffff8082111561044057600080fd5b818401915084601f83011261045457600080fd5b81358181111561046657610466610400565b604051601f8201601f19908116603f0116810190838211818310171561048e5761048e610400565b816040528281528760208487010111156104a757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104d957600080fd5b81356001600160a01b03811681146104f057600080fd5b9392505050565b6000815180845260005b8181101561051d57602081850181015186830182015201610501565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104f060208301846104f7565b600181811c9082168061056457607f821691505b60208210810361058457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105d457600081815260208120601f850160051c810160208610156105b15750805b601f850160051c820191505b818110156105d0578281556001016105bd565b5050505b505050565b815167ffffffffffffffff8111156105f3576105f3610400565b610607816106018454610550565b8461058a565b602080601f83116001811461063c57600084156106245750858301515b600019600386901b1c1916600185901b1785556105d0565b600085815260208120601f198616915b8281101561066b5788860151825594840194600190910190840161064c565b50858210156106895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156106ba57634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03851681526080602082018190526000906106e4908301866104f7565b931515604083015250606001529291505056fea264697066735822122079c4c48e85328541253531ad94ade7ce6e6940de4b62c25051c8d676fc96296a64736f6c63430008120033",
    "sourceMap": "399:2282:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:164;;;;;;;;;;;;;:::i;:::-;;451:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;178:32:27;;;160:51;;148:2;133:18;451:30:2;;;;;;;;581:31;;;;;;;;;;;;;;;;;;;368:25:27;;;356:2;341:18;581:31:2;222:177:27;1643:560:2;;;;;;:::i;:::-;;:::i;618:51::-;;;;;;;;;;-1:-1:-1;618:51:2;;;;;:::i;:::-;;;;;;;;;;;;;;548:27;;;;;;;;;;-1:-1:-1;548:27:2;;;;;;;;;;;1919:14:27;;1912:22;1894:41;;1882:2;1867:18;548:27:2;1754:187:27;487:55:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2408:164::-;1360:10;-1:-1:-1;;;;;1374:5:2;1360:19;;1352:45;;;;-1:-1:-1;;;1352:45:2;;2801:2:27;1352:45:2;;;2783:21:27;2840:2;2820:18;;;2813:30;-1:-1:-1;;;2859:18:27;;;2852:43;2912:18;;1352:45:2;;;;;;;;;2454:12:::1;2471:5;-1:-1:-1::0;;;;;2471:10:2::1;2489:21;2471:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:62;;;2533:7;2525:40;;;::::0;-1:-1:-1;;;2525:40:2;;3353:2:27;2525:40:2::1;::::0;::::1;3335:21:27::0;3392:2;3372:18;;;3365:30;-1:-1:-1;;;3411:18:27;;;3404:50;3471:18;;2525:40:2::1;3151:344:27::0;2525:40:2::1;2443:129;2408:164::o:0;1643:560::-;1753:8;:23;1764:12;1753:8;:23;:::i;:::-;;1802:1;1786:12;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;1833:10:2;1813:31;;;;:19;:31;;;;;:36;;1848:1;;1813:31;:36;;1848:1;;1813:36;:::i;:::-;;;;-1:-1:-1;;1973:9:2;:13;1969:104;;2012:4;2002:14;;-1:-1:-1;;2002:14:2;;;;;1969:104;;;2047:7;:15;;-1:-1:-1;;2047:15:2;;;1969:104;2138:58;2153:10;2165:12;2191:1;2179:9;:13;2194:1;2138:58;;;;;;;;;:::i;:::-;;;;;;;;1643:560;:::o;487:55::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;404:127:27:-;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:922;605:6;658:2;646:9;637:7;633:23;629:32;626:52;;;674:1;671;664:12;626:52;714:9;701:23;743:18;784:2;776:6;773:14;770:34;;;800:1;797;790:12;770:34;838:6;827:9;823:22;813:32;;883:7;876:4;872:2;868:13;864:27;854:55;;905:1;902;895:12;854:55;941:2;928:16;963:2;959;956:10;953:36;;;969:18;;:::i;:::-;1044:2;1038:9;1012:2;1098:13;;-1:-1:-1;;1094:22:27;;;1118:2;1090:31;1086:40;1074:53;;;1142:18;;;1162:22;;;1139:46;1136:72;;;1188:18;;:::i;:::-;1228:10;1224:2;1217:22;1263:2;1255:6;1248:18;1303:7;1298:2;1293;1289;1285:11;1281:20;1278:33;1275:53;;;1324:1;1321;1314:12;1275:53;1380:2;1375;1371;1367:11;1362:2;1354:6;1350:15;1337:46;1425:1;1403:15;;;1420:2;1399:24;1392:35;;;;-1:-1:-1;1407:6:27;536:922;-1:-1:-1;;;;;536:922:27:o;1463:286::-;1522:6;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1617:23;;-1:-1:-1;;;;;1669:31:27;;1659:42;;1649:70;;1715:1;1712;1705:12;1649:70;1738:5;1463:286;-1:-1:-1;;;1463:286:27:o;1946:423::-;1988:3;2026:5;2020:12;2053:6;2048:3;2041:19;2078:1;2088:162;2102:6;2099:1;2096:13;2088:162;;;2164:4;2220:13;;;2216:22;;2210:29;2192:11;;;2188:20;;2181:59;2117:12;2088:162;;;2092:3;2295:1;2288:4;2279:6;2274:3;2270:16;2266:27;2259:38;2358:4;2351:2;2347:7;2342:2;2334:6;2330:15;2326:29;2321:3;2317:39;2313:50;2306:57;;;1946:423;;;;:::o;2374:220::-;2523:2;2512:9;2505:21;2486:4;2543:45;2584:2;2573:9;2569:18;2561:6;2543:45;:::i;3500:380::-;3579:1;3575:12;;;;3622;;;3643:61;;3697:4;3689:6;3685:17;3675:27;;3643:61;3750:2;3742:6;3739:14;3719:18;3716:38;3713:161;;3796:10;3791:3;3787:20;3784:1;3777:31;3831:4;3828:1;3821:15;3859:4;3856:1;3849:15;3713:161;;3500:380;;;:::o;4011:545::-;4113:2;4108:3;4105:11;4102:448;;;4149:1;4174:5;4170:2;4163:17;4219:4;4215:2;4205:19;4289:2;4277:10;4273:19;4270:1;4266:27;4260:4;4256:38;4325:4;4313:10;4310:20;4307:47;;;-1:-1:-1;4348:4:27;4307:47;4403:2;4398:3;4394:12;4391:1;4387:20;4381:4;4377:31;4367:41;;4458:82;4476:2;4469:5;4466:13;4458:82;;;4521:17;;;4502:1;4491:13;4458:82;;;4462:3;;;4102:448;4011:545;;;:::o;4732:1352::-;4858:3;4852:10;4885:18;4877:6;4874:30;4871:56;;;4907:18;;:::i;:::-;4936:97;5026:6;4986:38;5018:4;5012:11;4986:38;:::i;:::-;4980:4;4936:97;:::i;:::-;5088:4;;5152:2;5141:14;;5169:1;5164:663;;;;5871:1;5888:6;5885:89;;;-1:-1:-1;5940:19:27;;;5934:26;5885:89;-1:-1:-1;;4689:1:27;4685:11;;;4681:24;4677:29;4667:40;4713:1;4709:11;;;4664:57;5987:81;;5134:944;;5164:663;3958:1;3951:14;;;3995:4;3982:18;;-1:-1:-1;;5200:20:27;;;5318:236;5332:7;5329:1;5326:14;5318:236;;;5421:19;;;5415:26;5400:42;;5513:27;;;;5481:1;5469:14;;;;5348:19;;5318:236;;;5322:3;5582:6;5573:7;5570:19;5567:201;;;5643:19;;;5637:26;-1:-1:-1;;5726:1:27;5722:14;;;5738:3;5718:24;5714:37;5710:42;5695:58;5680:74;;5567:201;-1:-1:-1;;;;;5814:1:27;5798:14;;;5794:22;5781:36;;-1:-1:-1;4732:1352:27:o;6089:222::-;6154:9;;;6175:10;;;6172:133;;;6227:10;6222:3;6218:20;6215:1;6208:31;6262:4;6259:1;6252:15;6290:4;6287:1;6280:15;6172:133;6089:222;;;;:::o;6316:479::-;-1:-1:-1;;;;;6551:32:27;;6533:51;;6620:3;6615:2;6600:18;;6593:31;;;-1:-1:-1;;6641:46:27;;6667:19;;6659:6;6641:46;:::i;:::-;6730:14;;6723:22;6718:2;6703:18;;6696:50;-1:-1:-1;6777:2:27;6762:18;6755:34;6633:54;6316:479;-1:-1:-1;;6316:479:27:o",
    "linkReferences": {},
    "immutableReferences": {
      "282": [
        {
          "start": 169,
          "length": 32
        },
        {
          "start": 419,
          "length": 32
        },
        {
          "start": 521,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "greeting()": "ef690cc0",
    "owner()": "8da5cb5b",
    "premium()": "e0a73a93",
    "setGreeting(string)": "a4136862",
    "totalCounter()": "97feba9d",
    "userGreetingCounter(address)": "cea49c3c",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"greetingSetter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newGreeting\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"premium\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GreetingChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newGreeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userGreetingCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"BuidlGuidl\",\"kind\":\"dev\",\"methods\":{\"setGreeting(string)\":{\"params\":{\"_newGreeting\":\"(string memory) - new greeting to save on the contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setGreeting(string)\":{\"notice\":\"Function that allows anyone to change the state variable \\\"greeting\\\" of the contract and increase the counters\"},\"withdraw()\":{\"notice\":\"Function that allows the owner to withdraw all the Ether in the contract The function can only be called by the owner of the contract as defined by the isOwner modifier\"}},\"notice\":\"A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the owner to withdraw the Ether in the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"YourContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/YourContract.sol\":{\"keccak256\":\"0x081d43ff3838a08efc79a4e9bd27c7b578b967396fff9c6c6bc97f83d5be26f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656d5a900afb0fed5a9cbeb43c9aeeb3e07ee8551cc89f0f78fc9357dee8b387\",\"dweb:/ipfs/QmW68hkw8ALWnq4pWdFQKNpypPxpxCobqJSxkxqMQa1cGx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "greetingSetter",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newGreeting",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "premium",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GreetingChange",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "greeting",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "premium",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newGreeting",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setGreeting"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userGreetingCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "setGreeting(string)": {
            "params": {
              "_newGreeting": "(string memory) - new greeting to save on the contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setGreeting(string)": {
            "notice": "Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters"
          },
          "withdraw()": {
            "notice": "Function that allows the owner to withdraw all the Ether in the contract The function can only be called by the owner of the contract as defined by the isOwner modifier"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/YourContract.sol": "YourContract"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/YourContract.sol": {
        "keccak256": "0x081d43ff3838a08efc79a4e9bd27c7b578b967396fff9c6c6bc97f83d5be26f6",
        "urls": [
          "bzz-raw://656d5a900afb0fed5a9cbeb43c9aeeb3e07ee8551cc89f0f78fc9357dee8b387",
          "dweb:/ipfs/QmW68hkw8ALWnq4pWdFQKNpypPxpxCobqJSxkxqMQa1cGx"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/YourContract.sol",
    "id": 407,
    "exportedSymbols": {
      "YourContract": [
        406
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:2651:2",
    "nodes": [
      {
        "id": 279,
        "nodeType": "PragmaDirective",
        "src": "31:31:2",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 406,
        "nodeType": "ContractDefinition",
        "src": "399:2282:2",
        "nodes": [
          {
            "id": 282,
            "nodeType": "VariableDeclaration",
            "src": "451:30:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "476:5:2",
            "scope": 406,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 281,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "451:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 285,
            "nodeType": "VariableDeclaration",
            "src": "487:55:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "ef690cc0",
            "mutability": "mutable",
            "name": "greeting",
            "nameLocation": "501:8:2",
            "scope": 406,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 283,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "487:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4275696c64696e6720556e73746f707061626c652041707073212121",
              "id": 284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "512:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a",
                "typeString": "literal_string \"Building Unstoppable Apps!!!\""
              },
              "value": "Building Unstoppable Apps!!!"
            },
            "visibility": "public"
          },
          {
            "id": 288,
            "nodeType": "VariableDeclaration",
            "src": "548:27:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "e0a73a93",
            "mutability": "mutable",
            "name": "premium",
            "nameLocation": "560:7:2",
            "scope": 406,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 286,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "548:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 287,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "570:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "id": 291,
            "nodeType": "VariableDeclaration",
            "src": "581:31:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "97feba9d",
            "mutability": "mutable",
            "name": "totalCounter",
            "nameLocation": "596:12:2",
            "scope": 406,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 289,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 290,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "611:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 295,
            "nodeType": "VariableDeclaration",
            "src": "618:51:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "cea49c3c",
            "mutability": "mutable",
            "name": "userGreetingCounter",
            "nameLocation": "650:19:2",
            "scope": 406,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 294,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 292,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "626:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "618:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 293,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "637:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 305,
            "nodeType": "EventDefinition",
            "src": "784:94:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad",
            "name": "GreetingChange",
            "nameLocation": "790:14:2",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "greetingSetter",
                  "nameLocation": "813:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "805:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newGreeting",
                  "nameLocation": "836:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "829:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 301,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "854:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "849:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "871:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "863:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:73:2"
            }
          },
          {
            "id": 315,
            "nodeType": "FunctionDefinition",
            "src": "1003:59:2",
            "nodes": [],
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "1031:31:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 310,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "1041:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 311,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "1049:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1041:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:14:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1023:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1015:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:16:2"
            },
            "returnParameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:2"
            },
            "scope": 406,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 327,
            "nodeType": "ModifierDefinition",
            "src": "1208:207:2",
            "nodes": [],
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "1227:188:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1360:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1364:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1360:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 320,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "1374:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1360:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746865204f776e6572",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1381:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40a6e638be01f825c07dc35def777dfc4285b31db2d1f792b6db28a04444532b",
                          "typeString": "literal_string \"Not the Owner\""
                        },
                        "value": "Not the Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40a6e638be01f825c07dc35def777dfc4285b31db2d1f792b6db28a04444532b",
                          "typeString": "literal_string \"Not the Owner\""
                        }
                      ],
                      "id": 317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1352:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:45:2"
                },
                {
                  "id": 325,
                  "nodeType": "PlaceholderStatement",
                  "src": "1407:1:2"
                }
              ]
            },
            "name": "isOwner",
            "nameLocation": "1217:7:2",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:2:2"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 375,
            "nodeType": "FunctionDefinition",
            "src": "1643:560:2",
            "nodes": [],
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1707:496:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 333,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "1753:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 334,
                      "name": "_newGreeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "1764:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1753:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:23:2"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 337,
                      "name": "totalCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "1786:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1802:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1786:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:17:2"
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 341,
                        "name": "userGreetingCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "1813:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 344,
                      "indexExpression": {
                        "expression": {
                          "id": 342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1833:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1837:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1833:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1813:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1848:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1813:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1813:36:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 348,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1973:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1977:5:2",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1973:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1985:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1973:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 361,
                    "nodeType": "Block",
                    "src": "2033:40:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 357,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "2047:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2057:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2047:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "2047:15:2"
                      }
                    ]
                  },
                  "id": 362,
                  "nodeType": "IfStatement",
                  "src": "1969:104:2",
                  "trueBody": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "1988:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 352,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "2002:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2012:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2002:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "2002:14:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 364,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2153:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2157:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2153:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 366,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "2165:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2179:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2183:5:2",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2179:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2191:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2179:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2194:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 363,
                      "name": "GreetingChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "2138:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,bool,uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "EmitStatement",
                  "src": "2133:63:2"
                }
              ]
            },
            "documentation": {
              "id": 328,
              "nodeType": "StructuredDocumentation",
              "src": "1421:217:2",
              "text": " Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters\n @param _newGreeting (string memory) - new greeting to save on the contract"
            },
            "functionSelector": "a4136862",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGreeting",
            "nameLocation": "1652:11:2",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "_newGreeting",
                  "nameLocation": "1678:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1664:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1663:28:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1707:0:2"
            },
            "scope": 406,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 400,
            "nodeType": "FunctionDefinition",
            "src": "2408:164:2",
            "nodes": [],
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "2443:129:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    382,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2459:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "2454:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2454:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 393,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 383,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2471:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2477:4:2",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2471:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 387,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2497:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_YourContract_$406",
                                  "typeString": "contract YourContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_YourContract_$406",
                                  "typeString": "contract YourContract"
                                }
                              ],
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2489:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 385,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2489:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2489:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2503:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2489:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2471:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2453:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 395,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "2533:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2542:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2525:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:40:2"
                }
              ]
            },
            "documentation": {
              "id": 376,
              "nodeType": "StructuredDocumentation",
              "src": "2209:194:2",
              "text": " Function that allows the owner to withdraw all the Ether in the contract\n The function can only be called by the owner of the contract as defined by the isOwner modifier"
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 379,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 378,
                  "name": "isOwner",
                  "nameLocations": [
                    "2428:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 327,
                  "src": "2428:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2428:7:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2417:8:2",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:2:2"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:0:2"
            },
            "scope": 406,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 405,
            "nodeType": "FunctionDefinition",
            "src": "2650:29:2",
            "nodes": [],
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "2677:2:2",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 401,
              "nodeType": "StructuredDocumentation",
              "src": "2578:67:2",
              "text": " Function that allows the contract to receive ETH"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:2:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2677:0:2"
            },
            "scope": 406,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "YourContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 280,
          "nodeType": "StructuredDocumentation",
          "src": "204:194:2",
          "text": " A smart contract that allows changing a state variable of the contract and tracking the changes\n It also allows the owner to withdraw the Ether in the contract\n @author BuidlGuidl"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          406
        ],
        "name": "YourContract",
        "nameLocation": "408:12:2",
        "scope": 407,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 2
}